/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mwbs;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;
import jdk.nashorn.internal.ir.Statement;

/**
 *
 * @author Imperator
 */
public class FrAdminManageTicket extends javax.swing.JFrame {

    /**
     * Creates new form FrAdminManageTicket
     */
    Connection conMain;
    Statement stmtMain;
    PreparedStatement pstmtMain;
    ResultSet rsMain;
    public FrAdminManageTicket() {
        labelBackground();
        initComponents();
        drawTicketTable();
    }
    
    private void labelBackground(){
        try {
            BufferedImage bfimgBackground = ImageIO.read(new File("src/mwbs/images/background.png"));
            Image imgBackground = bfimgBackground.getScaledInstance(620, 326    , java.awt.Image.SCALE_SMOOTH);
            setContentPane(new JLabel(new ImageIcon(imgBackground)));
        }
        catch (IOException ex) {
        }
    }
    
    private void connectDatabase(){
        try{
            String strURL = "jdbc:ucanaccess://MWBS.accdb";
            String strDatabaseUsername = "";
            String strDatabasePassword = "";
            conMain = DriverManager.getConnection(strURL, strDatabaseUsername, strDatabasePassword);
        }   
        catch(SQLException error){
        }
    }
    
    private void drawTicketTable(){
        connectDatabase();
        DefaultTableModel tblModel = (DefaultTableModel) tblList.getModel();
        tblModel.setRowCount(0);
        String strQuery = "SELECT "
                + "ticket_ID, ticket_Code, ticket_Name, ticket_Movie, ticket_Date, ticket_Status "
                + "FROM TicketList "
                + "ORDER BY ticket_ID";
        try{
            pstmtMain = conMain.prepareStatement(strQuery);
            rsMain = pstmtMain.executeQuery();
            while(rsMain.next()){
                String strID = rsMain.getString("ticket_ID");
                String strCode = rsMain.getString("ticket_Code");
                String strName = rsMain.getString("ticket_Name");
                String strMovie = rsMain.getString("ticket_Movie");
                String strDate = rsMain.getString("ticket_Date");
                String strStatus = rsMain.getString("ticket_Status");
                tblModel.addRow(new Object[]{strID, strCode, strName, strMovie, strDate, strStatus});
            }
        }
        catch(SQLException error){
            System.out.println(error);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scpList = new javax.swing.JScrollPane();
        tblList = new javax.swing.JTable();
        btnCancelReservation = new javax.swing.JButton();
        btnReturn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        tblList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Code", "Booker", "Movie", "Date", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scpList.setViewportView(tblList);
        if (tblList.getColumnModel().getColumnCount() > 0) {
            tblList.getColumnModel().getColumn(0).setResizable(false);
            tblList.getColumnModel().getColumn(1).setResizable(false);
            tblList.getColumnModel().getColumn(2).setResizable(false);
            tblList.getColumnModel().getColumn(3).setResizable(false);
            tblList.getColumnModel().getColumn(4).setResizable(false);
            tblList.getColumnModel().getColumn(5).setResizable(false);
        }

        btnCancelReservation.setText("Cancel Reservation");
        btnCancelReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelReservationActionPerformed(evt);
            }
        });

        btnReturn.setText("Return");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scpList, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCancelReservation)
                        .addGap(18, 18, 18)
                        .addComponent(btnReturn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scpList, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelReservation)
                    .addComponent(btnReturn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelReservationActionPerformed
        connectDatabase();
        int intMovieID = Integer.parseInt(String.valueOf(tblList.getValueAt(tblList.getSelectedRow(), 3)));
        int intTicketID = Integer.parseInt(String.valueOf(tblList.getValueAt(tblList.getSelectedRow(), 0)));
        int intReserved = 0;
        String strReservedQuery = "SELECT "
                    + "movie_ID, movie_Reserved "
                    + "FROM MovieList "
                    + "ORDER BY movie_ID";
        String strTicketQuery = "UPDATE TicketList SET "
                    + "ticket_Status = '"+"C"+"' "
                    + "WHERE ticket_ID = "+intTicketID;
        try{
            pstmtMain = conMain.prepareStatement(strReservedQuery);
            rsMain = pstmtMain.executeQuery();
            while(rsMain.next()){
                if(rsMain.getString("movie_ID").equals(String.valueOf(intMovieID))){
                    intReserved = rsMain.getInt("movie_Reserved");
                }
            }
            String strMovieQuery = "UPDATE MovieList SET "
                        + "movie_Reserved = '"+(intReserved-1)+"' "
                        + "WHERE movie_ID = "+intMovieID;
            pstmtMain = conMain.prepareStatement(strMovieQuery);
            pstmtMain.execute();
            pstmtMain = conMain.prepareStatement(strTicketQuery);
            pstmtMain.execute();
            drawTicketTable();
        }
        catch(SQLException error){
        }
    }//GEN-LAST:event_btnCancelReservationActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        new FrAdmin().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnReturnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrAdminManageTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrAdminManageTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrAdminManageTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrAdminManageTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrAdminManageTicket().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelReservation;
    private javax.swing.JButton btnReturn;
    private javax.swing.JScrollPane scpList;
    private javax.swing.JTable tblList;
    // End of variables declaration//GEN-END:variables
}
